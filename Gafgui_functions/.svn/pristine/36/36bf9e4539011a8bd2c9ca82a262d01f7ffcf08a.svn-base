% --------------------------------------------------------------------
function [xlim,X0,slim,p,nbbands,orders,isvalid] = fct_NewHomogCorrMethod(x,y,nbbands,res);

%Get min and max
maxx = max(x{1});
minx = min(x{1});
for i=1:nbbands
    %min of all maxes
    maxx = min(max(x{i}),maxx);
    %max of all mins
    minx = max(min(x{i}),minx);
end
%truncate data to min and max
epsilon = res/1000;
for i=1:nbbands
    xtmp = x{i};          ytmp = y{i};
    k1 = min(find(xtmp>(minx+epsilon))); k2 = max(find(xtmp<(maxx-epsilon)));
    xtmp = xtmp(k1:k2);   ytmp = ytmp(k1:k2);
    x{i} = xtmp(:);   y{i} = ytmp(:);
end
%find center
shift(1:nbbands) = 0;
S = round(1/res); %this is quite sufficien to look over +/- 1 cm
s=[-S:1:S];
for i=1:nbbands
    ytmp = y{i}; ytmp = ytmp(:);
    ytmpflp = flipud(ytmp(:));
    err(1:length(s)) = 0;
    for j = 1:length(s)
        err(j) = mean((ytmpflp((S+1-s(j)):(length(ytmpflp)-S-s(j))) - ytmp((S+1+s(j)):(length(ytmp)-S+s(j)))).^2);
    end
    k = find(err==min(err));
    if length(k)>1
        error('What is going on?');
        k = S + 1; %no shift
    end
    shift(i) = s(k)*res;
end
k = round(mean(shift)/res);
X0 = k*res;
clear shift;
X = x{i};
k0 = find(abs(X-X0)==min(abs(X-X0)));
L = length(X);
dist = min(L-k0,k0-1);
k1 = k0-dist;
k2 = k0+dist;
X = X(k1:k2);
choose =1;
J = [];
ii = 0;
%since I use 3 channels and don't want to end up with matrix havin different sizes, so I keep automatically.
if 1
    for i=1:nbbands
        xtmp = x{i}; xtmp = xtmp(:); xtmp = xtmp(k1:k2);
        ytmp = y{i}; ytmp = ytmp(:); ytmp = ytmp(k1:k2);
        ytmpflp = flipud(ytmp(:));
        ysym{i} = (ytmp(:)+ytmpflp(:))/2;
        ysymtmp = ysym{i};
    end
else
    for i=1:nbbands
        xtmp = x{i}; xtmp = xtmp(:); xtmp = xtmp(k1:k2);
        ytmp = y{i}; ytmp = ytmp(:); ytmp = ytmp(k1:k2);
        ytmpflp = flipud(ytmp(:));
        ysym{i} = (ytmp(:)+ytmpflp(:))/2;
        ysymtmp = ysym{i};
        if choose~=-1
            choose = 1;
            ii = ii+1;
            h{ii} = figure;
            j = 0;
            L = length(X);
            while choose==1
                figure(h{ii});
                plot(X(:),ytmp(:),'b',X(:),ytmpflp(:),'g',X(1+j:L-j),ysymtmp(1+j:L-j),'r');
                title(sprintf('Max region = %.0f%%', 100*(L-2*j)/L));
                ytmplim = ylim;
                set(gca,'ylim',[(ytmplim(1)+ytmplim(2))/2 *0.9   (ytmplim(1)+ytmplim(2))/2 *1.1]);
                legend('Profile','Flipped profile','Averaged (used)');
                if j==0
                    button = questdlg('Reduce/increase the region of interest?','Width','Smaller','Keep','Skip','Keep') ;
                elseif j > L/10
                    button = questdlg('Reduce/increase the region of interest?','Width','Keep','Larger','Skip','Keep') ;
                else
                    button = questdlg('Reduce/increase the region of interest?','Width','Smaller','Larger','Keep','Keep') ;
                end
                if strcmp(button,'Keep')
                    choose = 0;
                elseif strcmp(button,'Smaller')
                    j = j+5;
                elseif strcmp(button,'Larger')
                    j = j-5;
                elseif strcmp(button,'Skip')
                    choose = -1;
                end
            end
            J = cat(1,J,j);
        end
    end
    for j=1:ii
        close(h{j});
    end
    %reduce unwanted points
    J = max(J);
    X = X(1+J:L-J);
    for i=1:nbbands
        ytmp = ysym{i};
        ysym{i} = ytmp(1+J:L-J);
    end
end

%Choose fit
maxorder = 12;
F = (X-X0).^0;
orders = [0 2:2:maxorder];
for n = 2:2:maxorder
    F = cat(2,F,(X-X0).^n);
end
M = size(F,2);

%equivalent to for i=1:nbbands but with the option to break if choose ==-1
i=0; choose = 0;
while (i <nbbands)&&(choose>=0)
    i = i+1;
    ytmp = ysym{i};
    choose = 1;
    j = 1;
    h{i} = figure;
    while choose==1
        p{i} = F(:,1:j)\ytmp;
        figure(h{i});
        plot(X,ytmp,'.b',X,F(:,1:j)*p{i},'r','Linewidth',2);
        title(sprintf('Max order = %d', orders(j)));
        ytmplim = ylim;
        
        set(gca,'ylim',[(ytmplim(1)+ytmplim(2))/2 *0.9   (ytmplim(1)+ytmplim(2))/2 *1.1]);
        if j==1
            button = questdlg('Try another order?','Order','Keep','Next','Cancel','Keep') ;
        elseif j == M
            button = questdlg('Try another order?','Order','Previous','Keep','Cancel','Keep') ;
        else
            button = questdlg('Try another order?','Order','Previous','Next','Keep','Keep') ;
        end
        if strcmp(button,'Keep')
            choose = 0;
        elseif strcmp(button,'Next')
            j = j+1;
        elseif strcmp(button,'Previous')
            j = j-1;
        else
            choose = -1;
        end
    end
end
for j=1:i
    close(h{j});
end

if choose==-1
    isvalid = 0;
else
    isvalid = 1;
end

if isvalid
    %add artificial values
    p{length(p)+1} = 65535;
    nbbands = nbbands+1;
    xlim = [min(X) max(X)];
    s = zeros(1,nbbands);
    orders = zeros(1,nbbands);
    for i=1:nbbands
        ptmp = p{i};
        s(i) = ptmp(1);
        orders(i) = 2*(length(ptmp)-1);
    end
    slim = [min(s) max(s)];
end