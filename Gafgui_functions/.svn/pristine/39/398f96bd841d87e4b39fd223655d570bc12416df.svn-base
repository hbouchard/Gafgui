function [posx,posy,rmat,bmat,gmat,res,nbbands,stackdir] = fct_GetBands(handles);
% 
% clc;
% clear all;
% close all;

%This add the functions path
% cpu = computer;
% if strcmp(cpu,'PCWIN')||strcmp(cpu,'PCWIN64')
%     c = '\'; % dos
% else
%     c = '/'; % mac/linux/unix
%     %In the case someone uses a SUN, I don't know if this is correct
% end
% path = cd;
% if (path(max(size(path,1),size(path,2)))==c)
%     path = [path 'Gafgui_functions'];
%     path = [path '..' c 'Gafgui']
% else
%     path = [path c 'Gafgui_functions'];
%     path = [path c '..' c 'Gafgui'];
% end
% addpath(path);
% fct_AddGafguiFctPath();
% handles = fct_initGafgui();

%%%%%%%%%%%%%%%%%%%%%%%
button = questdlg('Do you want to use a single film or several films?','Type','Single','Several','Single') ;
str{1} = 'Free';
str{2}='Rectangular';
str{3}='Zoom';
str{4} = 'Point';

if strcmp(button,'Single')
    [ifilename,ipathname]=uigetfile({'*.tif'},'Choose the correction band scan');
    handles.H = fct_updatedisplay(handles);
    figure(handles.H);
    if ~strcmp(class(ifilename),'double')
        tmpflg  = 1;
    else
        tmpflg  = 0;
    end    
    if tmpflg
        [Im,res] = fct_read_tif16RGB_image(fct_makecleanfilename(ipathname,ifilename),'All');
        figure('NumberTitle','off','Name','Correction bands');
        h = fct_display(Im,res);
        nbbands  = inputdlg({'Enter the number of bands to analyze (you can include 1 region without film)'},'Number of bands',1);
        nbbands  = str2double(nbbands);

        for i = 1:nbbands
               [newz,center,owidth,cropz] = fct_getroi(Im,res,'Free',0);
               [m,n,k] = size(newz);
               [GX,GY] = meshgrid(0:n-1,0:m-1);
               rmat{i} = newz(:,:,1); gmat{i} = newz(:,:,2); bmat{i} = newz(:,:,3);
               ixstart = round((center(1) - owidth(1)/2)/res);
               iystart = round((center(2) - owidth(2)/2)/res);
               posx{i} = ixstart + GX ;
               posy{i} = iystart + GY ;
        end
    end
else
    tmpflg = 1;
    i = 0;
    restmp = 0;
    while tmpflg
        [ifilename,ipathname]=uigetfile({'*.tif'},'Choose the correction band scan');
        handles.H = fct_updatedisplay(handles);
        figure(handles.H);
        if ~strcmp(class(ifilename),'double')
            tmpflg  = 1;
        else
            tmpflg  = 0;
        end
        if tmpflg
            [Im,res] = fct_read_tif16RGB_image(fct_makecleanfilename(ipathname,ifilename),'All');
            figure('NumberTitle','off','Name','Correction bands');
            h = fct_display(Im,res);
            ok = 0;
            if restmp==0
               restmp = res;
               ok = 1;
            elseif res==restmp 
               ok = 1;
            end
            if ok
               [newz,center,owidth,cropz] = fct_getroi(Im,res,'Free',0);
               [m,n,k] = size(newz);
               [GX,GY] = meshgrid(0:n-1,0:m-1);
               i = i+1;
               rmat{i} = newz(:,:,1); gmat{i} = newz(:,:,2); bmat{i} = newz(:,:,3);
               ixstart = round((center(1) - owidth(1)/2)/res);
               iystart = round((center(2) - owidth(2)/2)/res);
               posx{i} = ixstart + GX ;
               posy{i} = iystart + GY ;
            else
                   error('Wrong resolution');
            end
        end
        button = questdlg('More images?','Shortcut','Yes','No','Yes') ;
        if strcmp(button,'No')
           tmpflg = 0; 
        end
        close ;
    end
    nbbands = i;
end


minx = min(min(posx{1})); maxx = max(max(posx{1}));
miny = min(min(posy{1})); maxy = max(max(posy{1}));

for i=2:nbbands
    minx = max(min(min(posx{i})),minx); maxx = min(max(max(posx{i})),maxx);
    miny = max(min(min(posy{i})),miny); maxy = min(max(max(posy{i})),maxy);
end
stackdir = questdlg('In which direction do you stack bands?','Direction','Horizontal','Vertical','Horizontal') ;
for i=1:nbbands
    if strcmp(stackdir,'Vertical')
        px = mean(posx{i},1); 
        k = intersect(find(px>=minx),find(px<=maxx));
        A = posx{i}; B = posy{i}; C = rmat{i}; D = gmat{i}; E = bmat{i};
        posx{i} = A(:,k); posy{i} = B(:,k); rmat{i} = C(:,k); gmat{i} = D(:,k); bmat{i} = E(:,k);
    else
        py = mean(posy{i},2); 
        k = intersect(find(py>=miny),find(py<=maxy));
        A = posx{i}; B = posy{i}; C = rmat{i}; D = gmat{i}; E = bmat{i};
        posx{i} = A(k,:); posy{i} = B(k,:); rmat{i} = C(k,:); gmat{i} = D(k,:); bmat{i} = E(k,:);        
    end    
end
clear A B C D E;

R = []; G = []; B = []; pos = [];
for i=1:nbbands
    if strcmp(stackdir,'Vertical')
        R = cat(1,R,rmat{i}); G= cat(1,G,gmat{i}); B = cat(1,B,bmat{i});
        pos = cat(1,pos,posx{i});
    else
        R = cat(2,R,rmat{i}); G= cat(2,G,gmat{i}); B = cat(2,B,bmat{i});  
        pos = cat(2,pos,posy{i});
    end
end
[m,n] = size(R); 
if strcmp(stackdir,'Vertical')
    posx1 = mean(pos,1)*res;
    posy1 = (0:(m-1)-(m-1)/2)*res;
else
    posx1 = (0:(n-1)-(n-1)/2)*res;
    posy1 = mean(pos,2)*res;
end
I(:,:,1) = R; I(:,:,2) = G; I(:,:,3) = B;

figure; imagesc(posx1,posy1,I); set(gca,'dataaspectratio',[1 1 1]);
